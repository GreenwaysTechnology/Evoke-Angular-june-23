				User interface Development
				     Using Angular
.....................................................................................

Angular is just javascript framework to build user interface.

Pre Knowledge
1.Javascript - basics of js
2.CSS 3
3.HTML 5.

Are we going to build angular apps using plain javascript?
   No!

We are going to use the language called "typescript"

Angular is built on the top of various technologies
1.Typescript
2.Reactive Programming using RXJS
4.Build tools like webpack
....................................................................................
		                     TypeScript 
//////////////////////////////////////////////////////////////////////////////////////////////

What is typescript?

 Typescript is object oriented and functional style programming language.
 Typescript that scales javascript.
 scaling is nothing but expanding features.
 Typescript is super set of Javascript.

Why Typescript? or Why Typescript was created?

What is Javascript?

 -Javascript is programming language.

Styles of programming language
 -Object oriented
 -Procedure oriented
 -Functional oriented

Java is object oriented,Java added functional programming principles.

Java is object oriented,functional style programming languages - hybrid language


Some languages designed with single style - c++,c
Some languages designed with multiple styles (hybrid) - Javascript,java 8,C#,Scala,Groovy,Kotiln....

	"Javascript is Object based,functional Style,Event driven programming 	language." - Hybrid language

Object based vs Object oriented:
...............................

Object Oriented Principles:
...........................

1.Abstraction
2.Encapsulation
3.Hierarchy - has-a,is-a 
4.Typing-strong typing(static typing) and weak typing(dynamic typing)
5.Modularity - how to share code across files and folders
----------------------
6.Concurrency
7.Persistency

if any language follows the first 5 prinicples 100% , those languages are called object oriented programming.

if any language  does not follow the first 5 prinicples 100% or if follwing paritally , those languages are called "object based programming"

functional pure vs style:

-if any language follows 100% functional programming principles those languages are called "purely functional",if not functional style.

Javascript features:

 -Typing
     Dynamic typed language / weak typed language -----javascript

        The type of variable is not verified during compile time, runtime verfication.

     var x ="hello"
     x=10;

     Static typed language/ Strongly typed language -  c,c++,c#,java......
       The type of variable is verified during compile time.

eg:
  int a =100
  int a ="hello"; invalid ;compile time error.
	
		"Think: why js was designed to be dynamic typed?"

Drawbacks of dynamic typing:
    -We cant build enterprise consistent application.

 -Object based 
    if we  want to design enterprise apps, using object oriented  in js not possible.

Why javascript:
  Javascript was created for process html pages.

https://home.cern/science/computing/birth-web/short-history-web

1989 - Web Project was started    ----------Sun created Java

1990 -  The first webserver,Browser was created

1994 - Netscap started

1995 - The first netscap navigator came to access web pages 

1996 - Netscap decided to put java inside web browser.

static web page- before netscap
dynamic web page -netscap

----Static web----- only hand coded html pages.

1996 - CREATED Dynamic web : how to work with databases
     - CGI - C,perl.
 J2EE- Servlets,JSP
 MS  - ASP
 OPEN SOURCE - PHP.

Server side web : create html pages on fly by including data from databases.

Netscap decided to build client side web technoloy- once html is rendered into web browser how to change that html onfly. 

Netscap decided to create a new programming language, who recurited Brendan Eich
,the programmer , asked to create new programming language for netscap navigator.

-Objective of Project

-It should be like java but it should not be java -light weight - scripting
-deadline is 10 days.

Time line:

1.javascript project started 1995
1.first name of the language was "Mocha"
2.language was renamed to "Live Script" -1996
3.language was renamed to "java Script" -1996

After language ready, which was submitted to standard body "ECMA international"

1996---1997 : JS 1.0 =>ES 1.0

1997- 1998 :  ES 2.0: It did not come

1999 :  ES 3

2007 : ES 4

2008 : ES 5

2012-2015 : ES 6

2016  ONWARDS : es 7,es 8, ......
.....................................................................................
/////////////////////////////////////////////////////////////////////////////////////
				Object oriented Javascript
.............................................................................................

////////////////////////////////////////////////////////////////////////////////////////////
				Object oriented Javascript
.............................................................................................

Fundamentally js is object based,type less language, then it is difficult to build object oriented systems.

in order to create better javascript, 2009, The project was started to make javascript looks like other object oriented langugages.

  - classes,interfaces,modules.... : Coffee script (intension was to introduce object oriented features like classes,interfaces).

Coffee script was the programming language. used to add classes,interfaces into js.

YOu write code in coffeescript

Employee.coffee

class Employee {

}
compiler - coffee Employee.coffe
|
Employee.js - compiled code -pure javascript 
|
run on browser


Coffee script had issues still - Type system- No strongly typed.
.....................................................................................

2010, Microsoft started project to create object oriented javascript using C#

Objective of MS Project:

 -Add Type System - Strong Typing
 -Classes
 -Modules
 -interfaces
 -encapulation keywords
 .......
C# ------------->compiler------>plain javascript.

MS Failed to port this project to public because

Problems with C#
 1.PORTABLITY.
 2.COMPLEXITY
.....................................................................................
Arch of TS:

					
				      TS language
					    |
					  ES 6
					    |
					  ES 5


Typescript----compile----Plain javascript

Typescript is strongly typed, object oriented  javascript.

Now you can use type script to build better object oriented systems using javascript.

TS is not compititor or replacer for javascript but it complements js.
Type scrit is a typed superset of javascript that compiles to plain javascript

                  any browser,any host, any os, any device

.....................................................................................
			  Project Setup
.....................................................................................

Softwares:
1.node js
2.vscode 

Project creation:

E:\session\Evoke> mkdir tsapps

E:\session\Evoke>cd tsapps

E:\session\Evoke\tsapps>npm init --yes
   ->This step will create package.json file
{
  "name": "tsapps",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
E:\session\Evoke\tsapps>mkdir src
  ->This will have source files : ts files

Typescript compiler:
E:\session\Evoke\tsapps>npm install typescript --save-dev

lanuch code window
E:\session\Evoke\tsapps>code .
   ->Lanuch the project in the current code window

How to write type script?

 src
  |
   index.ts
-Typescript files are saved with "fileName.ts" extension

How to compile Type script?

inside package.json
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "compile":"tsc --watch"
  },

in order to compile typescript file, we need one more configuration

E:\session\Evoke\tsapps> tsconfig.json
  ->compiler configuration file
{
    "compilerOptions": {
        "outDir": "build"     
    },
    "exclude": ["node_modules"],
    "files": ["src/index.ts"]
}

Start compilation:

E:\session\Evoke\tsapps>npm run compile
9:03:36 pm] Starting compilation in watch mode...

[9:03:37 pm] Found 0 errors. Watching for file changes.

Go to project explorer and see the build folder is where compiled code.

How to run the code?

E:\session\Evoke\tsapps
		|
		index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Typescript Application Demos</h1>
    <script src="build/index.js"></script>
</body>
</html>














